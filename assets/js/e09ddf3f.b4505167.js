"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[879],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>h});var n=a(67294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var p=n.createContext({}),s=function(e){var t=n.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(a),h=r,m=u["".concat(p,".").concat(h)]||u[h]||c[h]||o;return a?n.createElement(m,i(i({ref:t},d),{},{components:a})):n.createElement(m,i({ref:t},d))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=a[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},24478:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>d,contentTitle:()=>p,default:()=>h,frontMatter:()=>l,metadata:()=>s,toc:()=>c});var n=a(87462),r=a(63366),o=(a(67294),a(3905)),i=["components"],l={id:"maintain-guides-how-to-setup-a-validator-with-reverse-proxy",title:"Set Up a Validator with NGINX Reverse Proxy",sidebar_label:"Set Up a Validator with NGINX Reverse Proxy",description:"Steps on setting up a reverse proxy for your validator node.",keywords:["reverse proxy","nginx","setup","secure"],slug:"../maintain-guides-how-to-setup-a-validator-with-reverse-proxy"},p=void 0,s={unversionedId:"maintain/maintain-guides-how-to-setup-a-validator-with-reverse-proxy",id:"maintain/maintain-guides-how-to-setup-a-validator-with-reverse-proxy",title:"Set Up a Validator with NGINX Reverse Proxy",description:"Steps on setting up a reverse proxy for your validator node.",source:"@site/../docs/maintain/maintain-guides-how-to-setup-a-validator-with-reverse-proxy.md",sourceDirName:"maintain",slug:"/maintain-guides-how-to-setup-a-validator-with-reverse-proxy",permalink:"/docs/maintain-guides-how-to-setup-a-validator-with-reverse-proxy",draft:!1,tags:[],version:"current",lastUpdatedBy:"Danny Salman",lastUpdatedAt:1649858068,formattedLastUpdatedAt:"4/13/2022",frontMatter:{id:"maintain-guides-how-to-setup-a-validator-with-reverse-proxy",title:"Set Up a Validator with NGINX Reverse Proxy",sidebar_label:"Set Up a Validator with NGINX Reverse Proxy",description:"Steps on setting up a reverse proxy for your validator node.",keywords:["reverse proxy","nginx","setup","secure"],slug:"../maintain-guides-how-to-setup-a-validator-with-reverse-proxy"}},d={},c=[{value:"1. Firewall configuration",id:"1-firewall-configuration",level:3},{value:"2. Basic log viewing",id:"2-basic-log-viewing",level:3},{value:"3. NGINX reverse proxy setup",id:"3-nginx-reverse-proxy-setup",level:3},{value:"4. Defining your proxy port and p2p port in the polkadot command",id:"4-defining-your-proxy-port-and-p2p-port-in-the-polkadot-command",level:3},{value:"P2P Networking",id:"p2p-networking",level:4},{value:"public-addr",id:"public-addr",level:5},{value:"listen-addr",id:"listen-addr",level:5},{value:"Starting the validator with the NGINX proxy",id:"starting-the-validator-with-the-nginx-proxy",level:4}],u={toc:c};function h(e){var t=e.components,a=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This guide assumes that you have already configured your hardware with the appropriate specs. It has the same configuration\nas the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/w3f/polkadot-secure-validator"},"polkadot validator setup"),"."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Because validators of parachains need to have publicly accessible IP addresses and ports to receive connections from parachain collators, adding a proxy may potentially reduce connectivity and result\nin lower era points or the inability to validate parachain blocks. If using a proxy, it's recommended\nto keep an eye out on networking metrics."))),(0,o.kt)("p",null,"We will walk you through how to configure a reverse proxy using NGINX in front of your validator node. The\nvalidator uses the reverse proxy to filter traffic, whereby additional adjustments can be made to respond to a DDoS attack."),(0,o.kt)("h3",{id:"1-firewall-configuration"},"1. Firewall configuration"),(0,o.kt)("p",null,"We will configure the firewall with ",(0,o.kt)("a",{parentName:"p",href:"https://wiki.ubuntu.com/UncomplicatedFirewall"},"ufw"),". There needs to be three main ports\nfor this setup."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"An SSH port, commonly ssh/tcp port ",(0,o.kt)("inlineCode",{parentName:"li"},"22"),"."),(0,o.kt)("li",{parentName:"ul"},"A proxy port"),(0,o.kt)("li",{parentName:"ul"},"p2p port: must be denied at the firewall level.")),(0,o.kt)("p",null,"In this example, we will assign the port number ",(0,o.kt)("inlineCode",{parentName:"p"},"2435")," to the proxy port and the port number ",(0,o.kt)("inlineCode",{parentName:"p"},"30333")," to the p2p port.\nTo enable the firewall and the use of the ports, allow SSH access."),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"For parachains, you will need to allow for both inbound and outbound traffic on the p2p port")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Since the proxy port is the public-facing port, this will need to have inbound and outbound traffic\nopen, with the normal p2p port closed."))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"ufw enable\n# ssh port\nufw allow 22/tcp\n# proxy port\nufw allow 2435/tcp\n# libp2p port\nufw deny 30333/tcp\n# default port for HTTP\nufw deny 9933\n# default port for WS\nufw deny 9944\nufw reload\n# double check the firewall rules\nufw verbose\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"verbose")," option shows some extra information about the firewall's behavior."),(0,o.kt)("h3",{id:"2-basic-log-viewing"},"2. Basic log viewing"),(0,o.kt)("p",null,"We use ",(0,o.kt)("a",{parentName:"p",href:"https://www.loggly.com/blog/why-journald/"},"journald")," logs for basic log viewing.\nCreate a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"journald.conf")," file inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/systemd/")," directory with the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"[Journal]\nStorage=persistent\nRateLimitIntervalSec=30s\nRateLimitBurst=20000\nSystemMaxUse=50G\nSystemMaxFileSize=512M\nSystemMaxFiles=100\n")),(0,o.kt)("p",null,"Check out the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/w3f/polkadot-secure-validator/blob/master/ansible/roles/polkadot-validator/files/journald.conf"},"example journald configuration file")," for more available options."),(0,o.kt)("p",null,"Finally, run the following command to restart the journald service:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"systemctl restart systemd-journald\n")),(0,o.kt)("h3",{id:"3-nginx-reverse-proxy-setup"},"3. NGINX reverse proxy setup"),(0,o.kt)("p",null,"First, install NGINX with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"sudo apt-get install nginx\n")),(0,o.kt)("p",null,"Next, create an NGINX configuration file called ",(0,o.kt)("inlineCode",{parentName:"p"},"nginx.conf")," inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/nginx/")," directory with the following content:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"user www-data www-data;\n\nload_module /usr/lib/nginx/modules/ngx_stream_module.so;\n\nstream {\n  include streams-enabled/*;\n}\n\nhttp {\n  include sites-enabled/*;\n}\n\nevents{\n}\n")),(0,o.kt)("p",null,"This will import and make use of the ",(0,o.kt)("a",{parentName:"p",href:"https://nginx.org/en/docs/stream/ngx_stream_core_module.html"},"NGINX stream module"),".\nIn a nutshell, this module allows for continuous streaming of data in or out of the validator machine with all the benefits\nof having an optimized reverse proxy."),(0,o.kt)("p",null,"Next, create a folder called ",(0,o.kt)("inlineCode",{parentName:"p"},"/streams-enabled/")," inside the ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/nginx/")," directory and remove the default NGINX site."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Create the streams-enabled folder\nmkdir /etc/nginx/streams-enabled\n# Delete the default configuration\n/etc/nginx/sites-enabled/default\n")),(0,o.kt)("p",null,"Now, inside the newly created directory ",(0,o.kt)("inlineCode",{parentName:"p"},"/etc/nginx/streams-enabled/"),", create the proxy service file called\n",(0,o.kt)("inlineCode",{parentName:"p"},"polkadot-proxy.conf")," with the following content:"),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Use the previously defined ports: port ",(0,o.kt)("inlineCode",{parentName:"h5"},"2435")," for the proxy port & port number ",(0,o.kt)("inlineCode",{parentName:"h5"},"30333")," for the p2p port")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"})),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"server {\n  listen 0.0.0.0:2435;\n  location / {\n    proxy_pass http://localhost:30333;\n  }\n}\n")),(0,o.kt)("p",null,"Change the permissions of the file ",(0,o.kt)("inlineCode",{parentName:"p"},"polkadot-proxy.conf")," accordingly:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"chmod 0600 polkadot-proxy.conf\n")),(0,o.kt)("p",null,"Finally, restart NGINX with the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"service nginx restart\n")),(0,o.kt)("h3",{id:"4-defining-your-proxy-port-and-p2p-port-in-the-polkadot-command"},"4. Defining your proxy port and p2p port in the polkadot command"),(0,o.kt)("p",null,"These are some of the flags you are going to use when executing the command."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"--public-addr <VALIDATOR_IP>, <PROXY_PORT>")," - This flag defines the validator's IP and the proxy port\nthat all other nodes in the network will connect to."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"--listen-addr <LOCALHOST>, <P2P_PORT>")," - This flag defines the p2p port that the polkadot application\nwill use to connect to the NGINX reverse proxy."),(0,o.kt)("h4",{id:"p2p-networking"},"P2P Networking"),(0,o.kt)("p",null,"Nodes will use ",(0,o.kt)("a",{parentName:"p",href:"https://libp2p.io/"},"libp2p")," as the networking layer to establish peers and gossip\nmessages, but uses NGINX as a load balancer which acts as a ",(0,o.kt)("em",{parentName:"p"},"first listener")," of the streaming data to help\nbalance the load."),(0,o.kt)("h5",{id:"public-addr"},"public-addr"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"public-addr")," - a flexible encoding of multiple layers of protocols into a human-readable addressing scheme.\nIn our example, ",(0,o.kt)("inlineCode",{parentName:"p"},"/ip4/<VALIDATOR_IP>/tcp/<PROXY_PORT>")," is a valid ",(0,o.kt)("inlineCode",{parentName:"p"},"public-addr")," that\nspecifies wanting the network to reach the validator IPv4 address with TCP packets on the pre-defined proxy port."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"IP_ADDRESS")," - the public IP address of the validator.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"PROXY_PORT")," - the port that nodes will send p2p messages over the network and are read by the NGINX reverse proxy."))),(0,o.kt)("h5",{id:"listen-addr"},"listen-addr"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"listen-addr")," - the specification of what port the polkadot application will connect to the reverse proxy.\nIn our example, ",(0,o.kt)("inlineCode",{parentName:"p"},"/ip4/0.0.0.0/tcp/<P2P_PORT>"),"\nspecifies that you want to listen to NGINX on the localhost address (",(0,o.kt)("inlineCode",{parentName:"p"},"0.0.0.0"),", or all interfaces), with TCP\npackets on the pre-defined p2p port."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"P2P_PORT")," - the port that the polkadot application connects to NGINX.")),(0,o.kt)("h4",{id:"starting-the-validator-with-the-nginx-proxy"},"Starting the validator with the NGINX proxy"),(0,o.kt)("p",null,"After retrieving the appropriate ",(0,o.kt)("inlineCode",{parentName:"p"},"IP_ADDRESS"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"PROXY_PORT")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"P2P_PORT")," of the validator node, we can start the\nvalidator."),(0,o.kt)("p",null,"Start your validator with the ",(0,o.kt)("inlineCode",{parentName:"p"},"--validator")," flag:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# Validator Node\npolkadot \\\n  --name My_Validator_Name \\\n  --validator \\\n  --public-addr=/ip4/IP_ADDRESS/tcp/2435 \\\n  --listen-addr=/ip4/0.0.0.0/tcp/30333 \\\n  --rpc-methods=Unsafe \\\n  --chain=polkadot\n\n")),(0,o.kt)("p",null,"You should see your validator's peers, as well as the p2p port you are using to connect to NGINX."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"2020-12-17 19:04:36  __ Imported #2940151 (0x14c5_f472)\n2020-12-17 19:04:39  __ Idle (35 peers), best: #2940151 (0x14c5_f472), finalized #2940149 (0x6014_7806), _ 1.1MiB/s _ 1.1MiB/s\n2020-12-17 19:04:43  __ Imported #2940152 (0xcce7_c192)\n2020-12-17 19:04:44  __ Idle (35 peers), best: #2940152 (0xcce7_c192), finalized #2940150 (0x8e24_8e72), _ 1.4MiB/s _ 1.2MiB/s\n2020-12-17 19:04:48  __ Imported #2940153 (0xc79b_0ae3)\n2020-12-17 19:04:49  __ Idle (35 peers), best: #2940153 (0xc79b_0ae3), finalized #2940151 (0xc4b8_8fa1), _ 1.2MiB/s _ 1.2MiB/s\n2020-12-17 19:04:54  __ Imported #2940154 (0x1419_56db)\n2020-12-17 19:04:54  __ Idle (35 peers), best: #2940154 (0x1419_56db), finalized #2940151 (0xc4b8_8fa1), _ 1.2MiB/s _ 1002.5kiB/s\n")),(0,o.kt)("p",null,"Congratulations! You have successfully set up a validator with NGINX and now have a\nmore secure way of running your validator."))}h.isMDXComponent=!0}}]);