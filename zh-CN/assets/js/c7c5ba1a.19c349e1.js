"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6104],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>u});var n=a(67294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),d=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=d(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,s=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),h=d(a),u=i,m=h["".concat(l,".").concat(u)]||h[u]||p[u]||s;return a?n.createElement(m,o(o({ref:t},c),{},{components:a})):n.createElement(m,o({ref:t},c))}));function u(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var s=a.length,o=new Array(s);o[0]=h;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:i,o[1]=r;for(var d=2;d<s;d++)o[d]=a[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},63706:(e,t,a)=>{a.r(t),a.d(t,{frontMatter:()=>r,contentTitle:()=>l,metadata:()=>d,toc:()=>c,default:()=>h});var n=a(87462),i=a(63366),s=(a(67294),a(3905)),o=["components"],r={id:"learn-accounts",title:"Polkadot Accounts",sidebar_label:"Polkadot Accounts",description:"An explanation of accounts, indices, identity, and reaping.",keywords:["account","polkadot account","polkadotjs","indices","identity","reaping"],slug:"../learn-accounts"},l=void 0,d={unversionedId:"learn/learn-accounts",id:"learn/learn-accounts",title:"Polkadot Accounts",description:"An explanation of accounts, indices, identity, and reaping.",source:"@site/../docs/learn/learn-accounts.md",sourceDirName:"learn",slug:"/learn-accounts",permalink:"/zh-CN/docs/learn-accounts",editUrl:"https://github.com/w3f/polkadot-wiki/edit/master/docs/learn/learn-accounts.md",tags:[],version:"current",lastUpdatedBy:"Danny Salman",lastUpdatedAt:1649959959,formattedLastUpdatedAt:"2022/4/14",frontMatter:{id:"learn-accounts",title:"Polkadot Accounts",sidebar_label:"Polkadot Accounts",description:"An explanation of accounts, indices, identity, and reaping.",keywords:["account","polkadot account","polkadotjs","indices","identity","reaping"],slug:"../learn-accounts"}},c=[{value:"Address Format",id:"address-format",children:[],level:2},{value:"Address Generation, Derivation, and Portability",id:"address-generation-derivation-and-portability",children:[{value:"Seed Generation",id:"seed-generation",children:[],level:3},{value:"Derivation Paths",id:"derivation-paths",children:[],level:3},{value:"Soft vs. Hard Derivation",id:"soft-vs-hard-derivation",children:[],level:3},{value:"Portability",id:"portability",children:[],level:3},{value:"For the Curious: How Prefixes Work",id:"for-the-curious-how-prefixes-work",children:[],level:3}],level:2},{value:"Obtaining and Managing an Address",id:"obtaining-and-managing-an-address",children:[],level:2},{value:"Balance Types",id:"balance-types",children:[],level:2},{value:"Existential Deposit and Reaping",id:"existential-deposit-and-reaping",children:[],level:2},{value:"Indices",id:"indices",children:[],level:2},{value:"Identities",id:"identities",children:[],level:2},{value:"Proxy Accounts",id:"proxy-accounts",children:[],level:2},{value:"Multi-signature Accounts",id:"multi-signature-accounts",children:[{value:"Generating Addresses of Multi-signature Accounts",id:"generating-addresses-of-multi-signature-accounts",children:[],level:3},{value:"Making Transactions with a Multi-signature Account",id:"making-transactions-with-a-multi-signature-account",children:[],level:3},{value:"Example with Polkadot.JS",id:"example-with-polkadotjs",children:[],level:3}],level:2},{value:"Decoding Call Data",id:"decoding-call-data",children:[],level:2},{value:"Address Conversion Tools",id:"address-conversion-tools",children:[{value:"How to Verify a Public Key&#39;s Associated Address",id:"how-to-verify-a-public-keys-associated-address",children:[{value:"Using Subkey to Retrieve Public Key from SS58 Address",id:"using-subkey-to-retrieve-public-key-from-ss58-address",children:[],level:4},{value:"Address Verification",id:"address-verification",children:[{value:"Consider the following example:",id:"consider-the-following-example",children:[],level:5}],level:4}],level:3}],level:2},{value:"Resources",id:"resources",children:[],level:2}],p={toc:c};function h(e){var t=e.components,r=(0,i.Z)(e,o);return(0,s.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This document covers the basics of Polkadot and Kusama account addresses and how they exist\non-chain. For a more in-depth explanation of the cryptography behind them, please see\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-cryptography"},"the cryptography page"),"."),(0,s.kt)("h2",{id:"address-format"},"Address Format"),(0,s.kt)("p",null,"The address format used in Substrate-based chains is SS58. SS58 is a modification of Base-58-check\nfrom Bitcoin with some minor changes. Notably, the format contains an ",(0,s.kt)("em",{parentName:"p"},"address type")," prefix that\nidentifies an address as belonging to a specific network."),(0,s.kt)("p",null,"For example:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Polkadot addresses ",(0,s.kt)("strong",{parentName:"li"},"always start with")," the number ",(0,s.kt)("strong",{parentName:"li"},"1"),"."),(0,s.kt)("li",{parentName:"ul"},"Kusama addresses always start with a capital letter, such as ",(0,s.kt)("strong",{parentName:"li"},"C D, F, G, H, J"),"."),(0,s.kt)("li",{parentName:"ul"},"Generic Substrate addresses ",(0,s.kt)("strong",{parentName:"li"},"always start with")," the number ",(0,s.kt)("strong",{parentName:"li"},"5"),".")),(0,s.kt)("p",null,"These prefixes, including how to validate addresses, are broken down on the\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/advanced/ss58/"},"Substrate SS58 documentation"),". Never use regular\nexpressions for address validation."),(0,s.kt)("p",null,"It's important to understand that different network formats are ",(0,s.kt)("strong",{parentName:"p"},"merely other representations of\nthe same public key in a private-public keypair")," generated by an address generation tool. As a\nresult, the addresses across Substrate-based chains are compatible as long as the format is\nconverted correctly."),(0,s.kt)("p",null,"As of Runtime 28, the default ",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-accounts##address-format"},"address format")," is the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/blob/master/primitives/runtime/src/multiaddress.rs"},(0,s.kt)("inlineCode",{parentName:"a"},"MultiAddress")),"\ntype."),(0,s.kt)("p",null,"This ",(0,s.kt)("inlineCode",{parentName:"p"},"enum")," is a multi-format address wrapper for on-chain accounts and allows us to describe\nPolkadot's default address format to represent many different address types. This includes ",(0,s.kt)("strong",{parentName:"p"},"20\nbyte"),", ",(0,s.kt)("strong",{parentName:"p"},"32 byte"),", and ",(0,s.kt)("strong",{parentName:"p"},"arbitrary raw byte")," variants. It also allows an enhancement to the\noriginal ",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-accounts##indices"},(0,s.kt)("inlineCode",{parentName:"a"},"indices"))," lookup."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Many wallets allow you to convert between formats. Stand-alone tools exist as well; you can find\nthem in the ",(0,s.kt)("a",{parentName:"p",href:"#address-conversion-tools"},"address conversion tools")," section."))),(0,s.kt)("h2",{id:"address-generation-derivation-and-portability"},"Address Generation, Derivation, and Portability"),(0,s.kt)("p",null,"A valid account requires a private key that can sign on to one of the\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/build-protocol-info#cryptography"},"supported curves and signature schemes"),"."),(0,s.kt)("p",null,"Most wallets take many steps from a mnemonic phrase to an account key, which affects the ability to\nuse the same mnemonic phrase in multiple wallets. Wallets that use different measures will arrive at\na different set of addresses from the exact mnemonic phrase."),(0,s.kt)("h3",{id:"seed-generation"},"Seed Generation"),(0,s.kt)("p",null,"Most wallets generate a mnemonic phrase for users to back up their wallets and generate a private\nkey from the mnemonic. Not all wallets use the same algorithm to convert from mnemonic phrase to\nprivate key."),(0,s.kt)("p",null,"A typical mnemonic phrase generated by ",(0,s.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/tools/subkey/"},"the Subkey tool"),"\nis shown below."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"'caution juice atom organ advance problem want pledge someone senior holiday very'\n")),(0,s.kt)("p",null,"Its corresponding ",(0,s.kt)("em",{parentName:"p"},"private/public keypair")," is also shown."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Secret seed (Private key): 0x056a6a4e203766ffbea3146967ef25e9daf677b14dc6f6ed8919b1983c9bebbc\nPublic key (SS58): 5F3sa2TJAWMqDhXG6jhV4N8ko9SxwGy8TpaNS1repo5EYjQX\n")),(0,s.kt)("p",null,"Subkey and Polkadot-JS based wallets use the BIP39 dictionary for mnemonic generation, but use the\nentropy byte array to generate the private key, while full BIP39 wallets (like Ledger) use 2048\nrounds of PBKDF2 on the mnemonic. The same mnemonic may generate different private keys on other\nwallets due to the various cryptographic algorithms used."),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-bip39"},"Substrate BIP39 Repo")," for more information."),(0,s.kt)("h3",{id:"derivation-paths"},"Derivation Paths"),(0,s.kt)("p",null,"If you would like to create and manage several accounts on the network using the same seed, you can\nuse derivation paths. We can think of the derived accounts as child accounts of the root account\ncreated using the original mnemonic seed phrase. Many Polkadot key generation tools support hard and\nsoft derivation. For instance, if you intend to create an account to be used on the Polkadot chain,\nyou can derive a ",(0,s.kt)("strong",{parentName:"p"},"hard key")," child account using ",(0,s.kt)("strong",{parentName:"p"},"//")," after the mnemonic phrase."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"'caution juice atom organ advance problem want pledge someone senior holiday very//0'\n")),(0,s.kt)("p",null,"and a ",(0,s.kt)("strong",{parentName:"p"},"soft key")," child account using ",(0,s.kt)("strong",{parentName:"p"},"/")," after the mnemonic phrase"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"'caution juice atom organ advance problem want pledge someone senior holiday very/0'\n")),(0,s.kt)("p",null,"If you would like to create another account for using the Polkadot chain using the same seed, you\ncan change the number at the end of the string above. For example, ",(0,s.kt)("inlineCode",{parentName:"p"},"/1"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"/2"),", and ",(0,s.kt)("inlineCode",{parentName:"p"},"/3")," will create\ndifferent derived accounts."),(0,s.kt)("p",null,"You can use any letters or numbers in the derivation path as long as they make sense to you; they do\nnot have to follow any specific pattern. You may combine multiple derivations in your path, as well.\nFor instance, ",(0,s.kt)("inlineCode",{parentName:"p"},"//bill//account//1")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"//john/polkadot/initial")," are both valid. To recreate a\nderived account, you must know both the seed and the derivation path, so you should either use a\nwell-defined sequence (e.g. //0, //1, //2...) or be sure to write down any derivation paths you use."),(0,s.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"It is not possible to generate a derived account without also knowing the derivation path."))),(0,s.kt)("h3",{id:"soft-vs-hard-derivation"},"Soft vs. Hard Derivation"),(0,s.kt)("p",null,"A soft derivation allows someone to potentially \"go backwards\" to figure out the initial account's\nprivate key if they know the derived account's private key. It is also possible to determine that\ndifferent accounts generated from the same seed are linked to that seed. A hard derivation path does\nnot allow either of these - even if you know a derived private key, it's not feasible to figure out\nthe private key of the root address, and it's impossible to prove that the first account is linked\nwith the second. These derivation methods have their use cases, given that the private keys for all\nthe derived accounts are fully secure. Unless you have a specific need for a soft derivation, it is\nrecommended to generate the account using a hard derivation path."),(0,s.kt)("p",null,"See the ",(0,s.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/tools/subkey/"},"Subkey documentation")," for details and examples\nof derivation path formats. The Polkadot-JS Apps and Extension and Parity Signer support custom\nderivation paths using the same syntax as Subkey."),(0,s.kt)("p",null,"Some wallets will automatically add derivation paths to the end of the generated mnemonic phrase.\nThis will generate separate seeds for separate paths, allowing separate signing keys with the same\nmnemonic, e.g. ",(0,s.kt)("inlineCode",{parentName:"p"},"<mnemonic phrase>//polkadot")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"<mnemonic phrase>//kusama"),". Although you may\ncorrectly save the mnemonic phrase, using it in another wallet will not generate the same addresses\nunless both wallets use the same derivation paths."),(0,s.kt)("p",null,"Polkadot and Kusama both have paths registered in the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md"},"BIP44 registry"),"."),(0,s.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"}))),"warning")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"You must have both the ",(0,s.kt)("em",{parentName:"p"},"parent")," private key and the derivation path to arrive at the\nkey for an address. Do not use custom derivation paths unless you are comfortable with your\nunderstanding of this topic."))),(0,s.kt)("h3",{id:"portability"},"Portability"),(0,s.kt)("p",null,"The above information brings us to portability: the ability to use a mnemonic phrase or seed across\nmultiple wallets. Portability depends on several factors:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Derivation path"),(0,s.kt)("li",{parentName:"ul"},"Mnemonic format"),(0,s.kt)("li",{parentName:"ul"},"Seed derivation"),(0,s.kt)("li",{parentName:"ul"},"Signature scheme")),(0,s.kt)("p",null,"If you want to use the exact mnemonic across multiple wallets, make sure that they follow compatible\nmethods for generating keys and signing messages. If you cannot find understandable documentation,\nreach out to the project maintainers."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"}),(0,s.kt)("th",{parentName:"tr",align:"center"},"Mnemonic Format"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Derivation Path"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Seed Derivation"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Signature Support"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"Polkadot{.js} Extension"),(0,s.kt)("td",{parentName:"tr",align:"center"},"Standard"),(0,s.kt)("td",{parentName:"tr",align:"center"},"User-Defined"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,s.kt)("td",{parentName:"tr",align:"center"},"sr25519")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"Polkadot-JS Apps"),(0,s.kt)("td",{parentName:"tr",align:"center"},"Standard","*"),(0,s.kt)("td",{parentName:"tr",align:"center"},"User-Defined"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,s.kt)("td",{parentName:"tr",align:"center"},"sr25519, ed25519, secp256k")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"Ledger"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP39"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP44","\u2020"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP32","\u2021"),(0,s.kt)("td",{parentName:"tr",align:"center"},"ed25519","\xa7")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"Subkey"),(0,s.kt)("td",{parentName:"tr",align:"center"},"Standard","*"),(0,s.kt)("td",{parentName:"tr",align:"center"},"User-Defined"),(0,s.kt)("td",{parentName:"tr",align:"center"},"BIP32"),(0,s.kt)("td",{parentName:"tr",align:"center"},"sr25519, ed25519, secp256k1")))),(0,s.kt)("p",null,"*"," Ed25519 keys have ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate-bip39"},"limited compatibility")," with\nBIP39."),(0,s.kt)("p",null,"\u2020"," ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/satoshilabs/slips/blob/master/slip-0044.md"},"BIP44 Registry")),(0,s.kt)("p",null,"\u2021"," Ed25519 and BIP32 based on\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/LedgerHQ/orakolo/blob/master/papers/Ed25519_BIP%20Final.pdf"},"Khovratovich")),(0,s.kt)("p",null,"\xa7"," Sr25519 planned"),(0,s.kt)("h3",{id:"for-the-curious-how-prefixes-work"},"For the Curious: How Prefixes Work"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/wiki/External-Address-Format-(SS58)"},"SS58 document"),"\nstates that:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Polkadot has an address type of ",(0,s.kt)("inlineCode",{parentName:"li"},"00000000b"),", so ",(0,s.kt)("inlineCode",{parentName:"li"},"0")," is in decimal."),(0,s.kt)("li",{parentName:"ul"},"Kusama (Polkadot Canary) has an address type of ",(0,s.kt)("inlineCode",{parentName:"li"},"00000010b"),", so ",(0,s.kt)("inlineCode",{parentName:"li"},"2")," is in decimal."),(0,s.kt)("li",{parentName:"ul"},"Generic Substrate has ",(0,s.kt)("inlineCode",{parentName:"li"},"00101010b")," as the address type, ",(0,s.kt)("inlineCode",{parentName:"li"},"42")," is in decimal.")),(0,s.kt)("p",null,"Because the ",(0,s.kt)("inlineCode",{parentName:"p"},"Base58-check")," alphabet has no number 0, the lowest value is indeed 1. So ",(0,s.kt)("inlineCode",{parentName:"p"},"00000000b")," is\n1 in Base58-check. If we try to\n",(0,s.kt)("a",{parentName:"p",href:"https://www.better-converter.com/Encoders-Decoders/Base58Check-to-Hexadecimal-Decoder"},"decode")," a\nPolkadot address like ",(0,s.kt)("inlineCode",{parentName:"p"},"1FRMM8PEiWXYax7rpS6X4XZX1aAAxSWx1CrKTyrVYhV24fg"),", the result is\n",(0,s.kt)("inlineCode",{parentName:"p"},"000aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8e7bed3a66b29d7"),". The first byte is ",(0,s.kt)("inlineCode",{parentName:"p"},"00"),",\nwhich is indeed ",(0,s.kt)("inlineCode",{parentName:"p"},"00000000")," in binary and ",(0,s.kt)("inlineCode",{parentName:"p"},"0")," in decimal and thus matches the address type of\nPolkadot."),(0,s.kt)("p",null,"Let's take a look at Substrate addresses. If we decode\n",(0,s.kt)("inlineCode",{parentName:"p"},"5CK8D1sKNwF473wbuBP6NuhQfPaWUetNsWUNAAzVwTfxqjfr"),", we get\n",(0,s.kt)("inlineCode",{parentName:"p"},"2a0aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8e7bed3a66b77e5"),". The first byte is ",(0,s.kt)("inlineCode",{parentName:"p"},"2a"),"\nwhich when\n",(0,s.kt)("a",{parentName:"p",href:"https://www.rapidtables.com/convert/number/hex-to-decimal.html"},"converted from hex to decimal"),"\nis 42. 42 is ",(0,s.kt)("inlineCode",{parentName:"p"},"00101010")," in binary, just as the SS58 document states."),(0,s.kt)("p",null,"Finally, let's look at Kusama addresses. Decoding ",(0,s.kt)("inlineCode",{parentName:"p"},"CpjsLDC1JFyrhm3ftC9Gs4QoyrkHKhZKtK7YqGTRFtTafgp"),"\ngives us ",(0,s.kt)("inlineCode",{parentName:"p"},"020aff6865635ae11013a83835c019d44ec3f865145943f487ae82a8e7bed3a66b0985")," with the first\nbyte being ",(0,s.kt)("inlineCode",{parentName:"p"},"02"),", just as specified. If we try a Kusama address that starts with a completely\ndifferent letter, like ",(0,s.kt)("inlineCode",{parentName:"p"},"J4iggBtsWsb61RemU2TDWDXTNHqHNfBSAkGvVZBtn1AJV1a"),", we still get ",(0,s.kt)("inlineCode",{parentName:"p"},"02")," as the\nfirst byte: ",(0,s.kt)("inlineCode",{parentName:"p"},"02f2d606a67f58fa0b3ad2b556195a0ef905676efd4e3ec62f8fa1b8461355f1142509"),". It seems\ncounterintuitive that some addresses always have the same prefix and others like Kusama can vary\nwildly, but it's just a quirk of Base58-check encoding."),(0,s.kt)("h2",{id:"obtaining-and-managing-an-address"},"Obtaining and Managing an Address"),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"most user-friendly")," way to create a Polkadot or Kusama address is through the\n",(0,s.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/#/accounts"},"Polkadot-JS UI"),". Remember to back up the seed phrase used\nto generate your account - the accounts are stored only in your browser, so purging the cache will\nwipe your accounts as well. You would then have to recreate them using the seed phrase given to you\nby the UI - this will also restore all your previously held balances."),(0,s.kt)("p",null,"A ",(0,s.kt)("strong",{parentName:"p"},"more convenient and recommended")," method of keeping the accounts stored on your computer is\nusing the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/polkadot-js/extension"},"Polkadot{.js} extension"),". This extension\nremembers your accounts and allows you to clear your browser cache without fear. Still, don't forget\nto back up your seed phrase - if you lose access to this computer or the extension somehow crashes\nbeyond repair, the phrase will come in handy."),(0,s.kt)("p",null,'Please note that as this keeps your accounts in the browser, it is not safe to keep significant\nholdings. By definition, a browser is a "hot wallet" and susceptible to a wide range of attacks, so\nkeep your funds in cold storage when dealing with non-trivial amounts. For improved security, you\ncan securely stash away the seed phrase for your accounts and remove all traces of the accounts from\nyour computer after creating them.'),(0,s.kt)("p",null,"Besides the extension and the default UI, Polkadot and Kusama addresses can also be created with the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/tree/master/bin/utils/subkey"},"Subkey tool"),". Subkey is\nintended for users comfortable with using the command line and can seem intimidating but is quite\napproachable. Follow the instructions in the\n",(0,s.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/tools/subkey/"},"Subkey documentation"),". When used properly, Subkey is\nthe ",(0,s.kt)("strong",{parentName:"p"},"most secure")," available method of creating an account."),(0,s.kt)("p",null,"There is also the very secure ",(0,s.kt)("a",{parentName:"p",href:"https://www.parity.io/signer/"},"Parity Signer"),". This keeps your keys\non an air-gapped mobile phone. However, it does require obtaining an old Android or iOS-compatible\nphone that you are comfortable using only for Parity Signer."),(0,s.kt)("p",null,"Hardware wallet integration is possible with Ledger. A full guide is available\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-ledger"},"here"),"."),(0,s.kt)("p",null,"Alternatively, you might find other wallets on the ",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/build-wallets"},"Wallet")," page, but\nbear in mind that some of these are ",(0,s.kt)("strong",{parentName:"p"},"unaudited")," and are not officially affiliated with Web3\nFoundation or the Polkadot project unless otherwise stated."),(0,s.kt)("h2",{id:"balance-types"},"Balance Types"),(0,s.kt)("p",null,"On Polkadot, ",(0,s.kt)("strong",{parentName:"p"},"four different balance types")," indicate whether your balance can be used for\ntransfers, to pay fees, or must remain frozen and unused due to an on-chain requirement."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"AccountData")," struct defines the balance types in Substrate. The four types of balances include\n",(0,s.kt)("inlineCode",{parentName:"p"},"free"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"reserved"),", ",(0,s.kt)("inlineCode",{parentName:"p"},"misc_frozen")," (",(0,s.kt)("inlineCode",{parentName:"p"},"miscFrozen")," in camel-case), and ",(0,s.kt)("inlineCode",{parentName:"p"},"fee_frozen")," (",(0,s.kt)("inlineCode",{parentName:"p"},"feeFrozen")," in\ncamel-case)."),(0,s.kt)("p",null,"In general, the ",(0,s.kt)("strong",{parentName:"p"},"usable")," balance of the account is the amount that is ",(0,s.kt)("inlineCode",{parentName:"p"},"free")," minus any funds that\nare considered frozen (either ",(0,s.kt)("inlineCode",{parentName:"p"},"misc_frozen")," or ",(0,s.kt)("inlineCode",{parentName:"p"},"fee_frozen"),") and depend on the reason for which the\nfunds are to be used. If the funds are to be used for transfers, then the usable amount is the\n",(0,s.kt)("em",{parentName:"p"},"free")," amount minus any ",(0,s.kt)("inlineCode",{parentName:"p"},"misc_frozen")," funds. However, if the funds are to be used to pay transaction\nfees, the usable amount would be the ",(0,s.kt)("em",{parentName:"p"},"free")," funds minus ",(0,s.kt)("inlineCode",{parentName:"p"},"fee_frozen"),"."),(0,s.kt)("p",null,"The ",(0,s.kt)("strong",{parentName:"p"},"total")," balance of the account is considered to be the sum of ",(0,s.kt)("inlineCode",{parentName:"p"},"free")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"reserved"),' funds in\nthe account. Reserved funds are held due to on-chain requirements and can usually be freed by taking\nsome on-chain action. For example, the "Identity" pallet reserves funds while an on-chain identity\nis registered, but by clearing the identity, you can unreserve the funds and make them free again.'),(0,s.kt)("h2",{id:"existential-deposit-and-reaping"},"Existential Deposit and Reaping"),(0,s.kt)("p",null,"When you generate an account (address), you only generate a ",(0,s.kt)("em",{parentName:"p"},"key")," that lets you access it. The\naccount does not exist yet on-chain. For that, it needs the existential deposit: 0.0000333333 KSM\n(on Kusama) or 1 DOT (on Polkadot mainnet)."),(0,s.kt)("p",null,"Having an account go below the existential deposit causes that account to be ",(0,s.kt)("em",{parentName:"p"},"reaped"),". The account\nwill be wiped from the blockchain's state to conserve space, along with any funds in that address.\nYou do not lose access to the reaped address - as long as you have your private key or recovery\nphrase, you can still use the address - but it needs a top-up of another existential deposit to be\nable to interact with the chain."),(0,s.kt)("p",null,"Transaction fees cannot cause an account to be reaped. Since fees are deducted from the account\nbefore any other transaction logic, accounts with balances ",(0,s.kt)("em",{parentName:"p"},"equal to")," the existential deposit cannot\nconstruct a valid transaction. Additional funds will need to be added to cover the transaction fees."),(0,s.kt)("p",null,"Here's another way to think about existential deposits. Ever notice those ",(0,s.kt)("inlineCode",{parentName:"p"},"Thumbs.db")," files on\nWindows or ",(0,s.kt)("inlineCode",{parentName:"p"},".DS_Store")," files on Mac? Those are junk; they serve no specific purpose other than\nmaking previews a bit faster. If a folder is empty saved for such a file, you can remove the folder\nto clear the junk off your hard drive. That does not mean you lose access to this folder forever -\nyou can always recreate it. You have the ",(0,s.kt)("em",{parentName:"p"},"key"),", after all - you're the computer's owner. It just\nmeans you want to keep your computer clean until you maybe end up needing this folder again and then\nrecreate it. Your address is like this folder - it gets removed from the chain when nothing is in it\nbut gets put back when it has the existential deposit."),(0,s.kt)("h2",{id:"indices"},"Indices"),(0,s.kt)("p",null,"A Kusama or Polkadot address can have an index. An index is like a short and easy-to-remember\nversion of an address. Claiming an index requires a deposit that is released when the index is\ncleared."),(0,s.kt)("p",null,"Indices are populated in order. Think of them like slots going from 0 to any arbitrary number:"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"[0][1][2][3][4][5][6]...")),(0,s.kt)("p",null,"If slots 0-2 are populated by addresses A, B, and C, respectively, and I add an existential deposit\nto address X, that address will automatically be put into slot 3. Henceforth, you can send me money\nby just sending to ",(0,s.kt)("inlineCode",{parentName:"p"},"[3]")," rather than remembering my complete address."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"[0][1][2][3][4][5][6]...\n[A][B][C][X][ ][ ][ ]...\n")),(0,s.kt)("p",null,"But what if an account gets reaped as explained above? In that case, the index is emptied. In other\nwords, the slot frees up again. If someone creates a new account, they may use the same index\nanother address was using before."),(0,s.kt)("p",null,"It is possible to ",(0,s.kt)("em",{parentName:"p"},"freeze")," an index and permanently assign it to an address. This action consumes a\ndeposit but makes sure that the index can never be reclaimed unless released by the holding account."),(0,s.kt)("p",null,"To register an index, submit a ",(0,s.kt)("inlineCode",{parentName:"p"},"claim")," extrinsic to the ",(0,s.kt)("inlineCode",{parentName:"p"},"indices")," pallet, and follow up with a\n",(0,s.kt)("inlineCode",{parentName:"p"},"freeze")," extrinsic. The easiest way to do this is via PolkadotJS UI through the ",(0,s.kt)("em",{parentName:"p"},"Developer ->\nExtrinsics")," menu:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Indices extrinsics",src:a(14041).Z,width:"786",height:"386"})),(0,s.kt)("p",null,"To find available indices to claim,\n",(0,s.kt)("a",{parentName:"p",href:"https://www.shawntabrizi.com/substrate-js-utilities/indices/"},"this helper tool may come in handy"),"."),(0,s.kt)("h2",{id:"identities"},"Identities"),(0,s.kt)("p",null,"The ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/substrate/tree/master/frame/identity"},(0,s.kt)("em",{parentName:"a"},"Identities pallet"))," built\ninto Polkadot allows users to attach on-chain metadata to their accounts. Independent registrars can\nverify this metadata to provide trustworthiness. To learn more about how to set or release an\nidentity, how to define sub-accounts, or how to become a registrar, please read\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-identity"},"this guide"),"."),(0,s.kt)("h2",{id:"proxy-accounts"},"Proxy Accounts"),(0,s.kt)("p",null,"Polkadot comes with a generalized proxy account system that allows users to keep keys in cold\nstorage while proxies act on their behalf with restricted (or unrestricted) functionality. See the\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-proxies"},"proxies")," page for more information."),(0,s.kt)("h2",{id:"multi-signature-accounts"},"Multi-signature Accounts"),(0,s.kt)("p",null,"It is possible to create a multi-signature account in Substrate-based chains. A multi-signature\naccount is composed of one or more addresses and a threshold. The threshold defines how many\nsignatories (participating addresses) need to agree on submitting an extrinsic for the call to be\nsuccessful."),(0,s.kt)("p",null,"For example, Alice, Bob, and Charlie set up a multi-sig with a threshold of 2. This means Alice and\nBob can execute any call even if Charlie disagrees with it. Likewise, Charlie and Bob can execute\nany call without Alice. A threshold is typically a number smaller than the total number of members\nbut can also be equal to it, which means they all have to agree."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Explainer on multisig accounts")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Learn more about multisig accounts from our\n",(0,s.kt)("a",{parentName:"p",href:"https://www.youtube.com/watch?v=ZJLqszvhMyM&list=PLOyWqupZ-WGuAuS00rK-pebTMAOxW41W8&index=25&ab_channel=Polkadot"},"technical explainer video"),"."))),(0,s.kt)("p",null,"Multi-signature accounts have several uses:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"securing your own stash: use additional signatories as a 2FA mechanism to secure your funds. One\nsigner can be on one computer, and another can be on another or in cold storage. This slows down\nyour interactions with the chain but is orders of magnitude more secure."),(0,s.kt)("li",{parentName:"ul"},"board decisions: legal entities such as businesses and foundations use multi-sigs to govern over\nthe entity's treasury collectively."),(0,s.kt)("li",{parentName:"ul"},"group participation in governance: a multi-sig account can do everything a regular account can. A\nmulti-sig account could be a council member in Kusama's governance, where a set of community\nmembers could vote as one entity.")),(0,s.kt)("p",null,"Multi-signature accounts ",(0,s.kt)("strong",{parentName:"p"},"cannot be modified after being created"),". Changing the set of members or\naltering the threshold is not possible and instead requires the dissolution of the current multi-sig\nand creation of a new one. As such, multi-sig account addresses are ",(0,s.kt)("strong",{parentName:"p"},"deterministic"),", i.e. you can\nalways calculate the address of a multi-sig by knowing the members and the threshold, without the\naccount existing yet. This means one can send tokens to an address that does not exist yet, and if\nthe entities designated as the recipients come together in a new multi-sig under a matching\nthreshold, they will immediately have access to these tokens."),(0,s.kt)("h3",{id:"generating-addresses-of-multi-signature-accounts"},"Generating Addresses of Multi-signature Accounts"),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Addresses that are provided to the multi-sig wallets must be sorted")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The below methods for generating sort the accounts for you, but if you are implementing your\nown sorting, then be aware that the public keys are compared byte-for-byte and sorted ascending\nbefore being inserted in the payload that is hashed."))),(0,s.kt)("p",null,"Addresses are deterministically generated from the signers and threshold of the multisig wallet. For\na code example (in TypeScript) of generating you can view the internals of ",(0,s.kt)("inlineCode",{parentName:"p"},"@w3f/msig-util"),"\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/lsaether/msig-util/blob/master/src/actions/deriveAddress.ts"},"here"),"."),(0,s.kt)("p",null,"The ",(0,s.kt)("inlineCode",{parentName:"p"},"@w3f/msig-util")," is a small CLI tool that can determine the multi-signature address based on\nyour inputs."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-zsh"},"$ npx @w3f/msig-util@1.0.7 derive --addresses 15o5762QE4UPrUaYcM83HERK7Wzbmgcsxa93NJjkHGH1unvr,1TMxLj56NtRg3scE7rRo8H9GZJMFXdsJk1GyxCuTRAxTTzU --threshold 1\nnpx: installed 79 in 7.764s\n--------------------------------\nAddresses: 15o5762QE4UPrUaYcM83HERK7Wzbmgcsxa93NJjkHGH1unvr 1TMxLj56NtRg3scE7rRo8H9GZJMFXdsJk1GyxCuTRAxTTzU\nThreshold: 1\nMultisig Address (SS58: 0): 15FKUKXC6kwaXxJ1tXNywmFy4ZY6FoDFCnU3fMbibFdeqwGw\n--------------------------------\n")),(0,s.kt)("p",null,"The Polkadot-JS Apps UI also supports multi-sig accounts, as documented in the\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-account-generation#multi-signature-accounts"},"Account Generation page"),". This is easier than\ngenerating them manually."),(0,s.kt)("h3",{id:"making-transactions-with-a-multi-signature-account"},"Making Transactions with a Multi-signature Account"),(0,s.kt)("p",null,"There are three types of actions you can take with a multi-sig account:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Executing a call."),(0,s.kt)("li",{parentName:"ul"},"Approving a call."),(0,s.kt)("li",{parentName:"ul"},"Cancelling a call.")),(0,s.kt)("p",null,"In scenarios where only a single approval is needed, a convenience method ",(0,s.kt)("inlineCode",{parentName:"p"},"as_multi_threshold_1"),"\nshould be used. This function takes only the other signatories and the raw call as its arguments."),(0,s.kt)("p",null,"However, in anything but the simple one approval case, you will likely need more than one of the\nsignatories to approve the call before finally executing it. When you create a new call or approve a\ncall as a multi-sig, you will need to place a small deposit. The deposit stays locked in the pallet\nuntil the call is executed. The deposit is to establish an economic cost on the storage space that\nthe multi-sig call takes up on the chain and discourage users from creating dangling multi-sig\noperations that never get executed. The deposit will be reserved in the caller's accounts, so\nparticipants in multi-signature wallets should have spare funds available."),(0,s.kt)("p",null,"The deposit is dependent on the ",(0,s.kt)("inlineCode",{parentName:"p"},"threshold")," parameter and is calculated as follows:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre"},"Deposit = DepositBase + threshold * DepositFactor\n")),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"DepositBase")," and ",(0,s.kt)("inlineCode",{parentName:"p"},"DepositFactor")," are chain constants set in the runtime code."),(0,s.kt)("p",null,"Currently, the ",(0,s.kt)("strong",{parentName:"p"},"DepositBase")," equals ",(0,s.kt)("inlineCode",{parentName:"p"},"deposit(1, 88)")," (key size is 32; value is size 4+4+16+32 = 56\nbytes) and the ",(0,s.kt)("strong",{parentName:"p"},"DepositFactor")," equals ",(0,s.kt)("inlineCode",{parentName:"p"},"deposit(0, 32)")," (additional address of 32 bytes)."),(0,s.kt)("p",null,"The deposit function in JavaScript is defined below, cribbed from the\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/paritytech/polkadot/blob/master/runtime/polkadot/src/constants.rs#L26"},"Rust source"),"."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js"},"// Polkadot\nconst DOLLARS = 10000000000; // planck\nconst MILLICENTS = 100000; // planck\n\n// Kusama\n// const DOLLARS = 166666666666.67;\n// const MILLICENTS = 1666666.66;\n\nconst deposit = (items, bytes) => {\n  return items * 20 * DOLLARS + bytes * 100 * MILLICENTS;\n};\n\nconsole.log('DepositBase', deposit(1, 88));\nconsole.log('DepositFactor', deposit(0, 32));\n")),(0,s.kt)("p",null,"Thus the deposit values can be calculated as shown in the table below."),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:null}),(0,s.kt)("th",{parentName:"tr",align:null},"Polkadot (DOT)"),(0,s.kt)("th",{parentName:"tr",align:null},"Kusama (KSM)"),(0,s.kt)("th",{parentName:"tr",align:null},"Polkadot (planck)"),(0,s.kt)("th",{parentName:"tr",align:null},"Kusama (planck)"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"DepositBase"),(0,s.kt)("td",{parentName:"tr",align:null},"20.088"),(0,s.kt)("td",{parentName:"tr",align:null},"3.3401"),(0,s.kt)("td",{parentName:"tr",align:null},"200880000000"),(0,s.kt)("td",{parentName:"tr",align:null},"3340100000000")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:null},"DepositFactor"),(0,s.kt)("td",{parentName:"tr",align:null},".032"),(0,s.kt)("td",{parentName:"tr",align:null},"0.005333333312"),(0,s.kt)("td",{parentName:"tr",align:null},"320000000"),(0,s.kt)("td",{parentName:"tr",align:null},"5333333312")))),(0,s.kt)("p",null,"Let's consider an example of a multi-sig on Polkadot with a threshold of 2 and 3 signers: Alice,\nBob, and Charlie. First, Alice will create the call on-chain by calling ",(0,s.kt)("inlineCode",{parentName:"p"},"as_multi")," with the raw\ncall. When doing this Alice will have to deposit ",(0,s.kt)("inlineCode",{parentName:"p"},"DepositBase + (2 * DepositFactor) = 20.152 DOT"),"\nwhile she waits for either Bob or Charlie also to approve the call. When Bob comes to approve the\ncall and execute the transaction, he will not need to place the deposit, and Alice will receive her\ndeposit back."),(0,s.kt)("h3",{id:"example-with-polkadotjs"},"Example with Polkadot.JS"),(0,s.kt)("p",null,"For this example, we will be using the\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/maintain-networks#westend-test-network"},"Westend")," testnet and\n",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-balance-transfers#polkadot-js-apps"},"Polkadot.JS Apps")," to create a 2-of-3 multisig address\nand send a transaction with it."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"While Westend is meant to replicate the Polkadot mainnet as closely as possible, there are a few\nnotable differences:"),(0,s.kt)("ul",{parentName:"div"},(0,s.kt)("li",{parentName:"ul"},"Existential deposit is equal to 0.01 WND (Westies; Westend's native coin) instead of 1 DOT."),(0,s.kt)("li",{parentName:"ul"},"The multi-signature transaction deposit is equal to ~1 WND instead of ~20.2 DOT.")),(0,s.kt)("p",{parentName:"div"},"The photos below reflect values in WND, but instructions are the same for DOT."))),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"To create a multisig address and send a transaction using it, you will need the following:")),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"List of the multisig member's addresses. We will use Alice, Bob, and Charlie."),(0,s.kt)("li",{parentName:"ul"},"This must be in the address that initiates a multi-signature transaction (in this example,\nAlice).- DOT to deposit into the multisig address."),(0,s.kt)("li",{parentName:"ul"},"~20.2 DOT refundable deposit to send a multisig transaction.")),(0,s.kt)("p",null,"You should already have your account with some coins in it."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Account page",src:a(20962).Z,width:"3002",height:"792"})),(0,s.kt)("p",null,"To generate the multisig address, we need ",(0,s.kt)("strong",{parentName:"p"},"to add the multisig member addresses to the contact\nbook"),' under "Accounts > Address book".'),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Address book",src:a(49262).Z,width:"3004",height:"782"})),(0,s.kt)("p",null,'Click "Add Contact" in the upper right and provide the address and a name for each address.'),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Add Contact",src:a(49618).Z,width:"3004",height:"806"})),(0,s.kt)("p",null,"Here, Bob and Charlie have been added."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Address books 2",src:a(20102).Z,width:"3006",height:"872"})),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Next, we need to create the new multi-signature address."),' Navigate to the Accounts page (from the\ntoolbar, "Accounts > Accounts") and click the "+ Multisig" button. We will supply the three multisig\nmember addresses with a value \'2\' for the threshold.'),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"New multisig",src:a(6219).Z,width:"3000",height:"1188"})),(0,s.kt)("p",null,"Click 'Create', and you should see the new multisig address appear on this Accounts page."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"5",src:a(53933).Z,width:"3004",height:"878"})),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Let's fund the address now.")," For this example, we will transfer some coins from Alice's account\nto the multisig address. Under Alice's address, click 'Send', select the multisig wallet as the\ndestination, and provide an amount. Then, click 'Make Transfer', and then 'Sign and Submit'."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"6",src:a(5373).Z,width:"3000",height:"962"})," ",(0,s.kt)("img",{alt:"7",src:a(27979).Z,width:"3002",height:"748"})),(0,s.kt)("p",null,"We can see that the multisig account now has a balance."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"9",src:a(17505).Z,width:"3006",height:"886"})),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"To send a transaction, we need one of the members to initiate it.")," Let's use Alice to initiate\nthe transaction."),(0,s.kt)("p",null,"Make sure Alice has enough coins to cover the multisig transaction deposit and the transaction fees.\nThen, click 'Send' under the \"Multisig Test Address\", select a destination address (we generated an\naddress locally) and a transfer amount, and click 'Make Transfer'."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"10",src:a(33336).Z,width:"2190",height:"902"})),(0,s.kt)("p",null,"To sign as Alice, make sure she is selected as the 'multisig signatory', click 'Sign and Submit',\nand sign the transaction."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"11",src:a(15943).Z,width:"2192",height:"1130"})),(0,s.kt)("p",null,"You will now see a pending transaction the 'Multisig Test Address' (the purple icon next to the\naccount name), and if you click the dropdown arrow right of Alice's balance - you will see that a\nvalue equivalent to the multisig deposit has been 'reserved'; rendering that value untransferable\nuntil the multisig transaction completes."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"12",src:a(65397).Z,width:"2816",height:"1160"})),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Next, we need a second signature.")," Let's get it from Bob. In Bob's browser, repeat the following\nfrom the above steps."),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Add Alice, Charlie, and the multisig transaction destination addresses to Bob's Address book."),(0,s.kt)("li",{parentName:"ol"},"Create a new multisig address with the same parameters (Bob, Alice, and Charlie's addresses, and\na threshold value of '2').")),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Since multisig address generation is deterministic, if Bob (or any other member), on his\ncomputer was to generate a multisig address using Alice's, Charlie's, and his addresses, with a\nthreshold value of '2', he would produce the ",(0,s.kt)("strong",{parentName:"p"},"same")," multisig address that Alice has here."))),(0,s.kt)("p",null,"If done correctly, we should see that the ",(0,s.kt)("strong",{parentName:"p"},"same")," multisig address is produced in Bob's browser,\nand that a pending transaction is displayed, too."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"13",src:a(32285).Z,width:"2820",height:"568"})),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"Alice initiated the transaction by uploading a signature of the hash of the transaction and the\nhash."))),(0,s.kt)("p",null,"Next, to get Bob's signature, he must craft the same multisig transaction that Alice did by\nproviding the same destination address and transfer amount (together, transaction parameters),\nsigning and submitting it. These transaction parameters will allow Bob to produce and sign the same\ntransaction (the same hash) that Alice signed earlier."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"14",src:a(73859).Z,width:"2162",height:"874"})),(0,s.kt)("p",null,"Click 'Make Transfer' - ensure that Bob is the 'multisig signatory', and click 'Sign and Submit'."),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"'Multisig message with the call (for final approval)' is automatically enabled; this means\nthat, since the transaction will reach the signature threshold, it will execute the actual\ntransaction on the chain after adding the second signature."))),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"15",src:a(84098).Z,width:"2164",height:"1130"})),(0,s.kt)("p",null,"Assuming no errors, 'Multisig Destination Account' has a balance of 0.3 WND, and Alice's account has\nreleased the multisig transaction deposit."),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"16",src:a(97087).Z,width:"3004",height:"1010"})),(0,s.kt)("h2",{id:"decoding-call-data"},"Decoding Call Data"),(0,s.kt)("p",null,"You can use Polkadot-JS Apps to decode call data, as the extension only shows raw call data.\nThis will allow you to know what you're signing. "),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"The decoded call data requires you to understand what the events or calls mean in the context of\nthe transaction."))),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"Before submitting a transaction, copy the call data.")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"17",src:a(52400).Z,width:"1120",height:"840"})),(0,s.kt)("ol",{start:2},(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Navigate to the ",(0,s.kt)("a",{parentName:"p",href:"https://polkadot.js.org/apps/#/extrinsics/decode"},"Decode tab"),' under the\nExtrinsics section and paste the call data in the "hex-encoded call" window. Make sure you have\nthe correct account selected.')),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("p",{parentName:"li"},"Verify that the data is what you expect."))),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"18",src:a(30325).Z,width:"1207",height:"464"})),(0,s.kt)("ol",{start:4},(0,s.kt)("li",{parentName:"ol"},"Navigate back to the Polkadot-JS extension and approve the transaction.")),(0,s.kt)("p",null,"Another way to perform this is to update your metadata for that chain. You will then be able to\nhave the Polkadot-JS extension parse the call data for you."),(0,s.kt)("h2",{id:"address-conversion-tools"},"Address Conversion Tools"),(0,s.kt)("p",null,"You can use the tools below to convert any SS58 address for any network for use on different\nnetworks"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://polkadot.subscan.io/tools/ss58_transform"},"handy subscan tool")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://polkadot-address-convertor.netlify.app/"},"simple address converter"))),(0,s.kt)("h3",{id:"how-to-verify-a-public-keys-associated-address"},"How to Verify a Public Key's Associated Address"),(0,s.kt)("p",null,"You can verify your public key's associated address through a series of inspection steps, where the\nkey is a base-16 (hexadecimal) address."),(0,s.kt)("h4",{id:"using-subkey-to-retrieve-public-key-from-ss58-address"},"Using Subkey to Retrieve Public Key from SS58 Address"),(0,s.kt)("p",null,"This is to showcase that the ",(0,s.kt)("strong",{parentName:"p"},'SS58 address is based on the public key (aka "Account ID")')),(0,s.kt)("p",null,"The Subkey Tool's The ",(0,s.kt)("a",{parentName:"p",href:"https://docs.substrate.io/v3/tools/subkey/#inspecting-keys"},"Inspecting Keys"),"\nsection explains how to use the ",(0,s.kt)("inlineCode",{parentName:"p"},"inspect")," command to recalculate your key pair's public key and\naddress."),(0,s.kt)("p",null,"Start by inspecting your account's Polkadot address by running the inspect command against your\naccount's address:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ subkey inspect 1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n\nPublic Key URI `1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F` is account:\n  Network ID/version: polkadot\n  Public key (hex):   0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Account ID:         0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  SS58 Address:       1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n")),(0,s.kt)("p",null,'Take note of the hexadecimal string for "Public key (hex)". This is your account\'s public key.'),(0,s.kt)("p",null,"Running the ",(0,s.kt)("inlineCode",{parentName:"p"},"inspect")," command on your public key along with the ",(0,s.kt)("inlineCode",{parentName:"p"},"--public")," parameter the SS58\naddress for the default network (substrate) is returned."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ subkey inspect --public 0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n\nNetwork ID/version: substrate\n  Public key (hex):   0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Account ID:         0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Public key (SS58):  5CdiCGvTEuzut954STAXRfL8Lazs3KCZa5LPpkPeqqJXdTHp\n  SS58 Address:       5CdiCGvTEuzut954STAXRfL8Lazs3KCZa5LPpkPeqqJXdTHp\n")),(0,s.kt)("p",null,"Using the ",(0,s.kt)("inlineCode",{parentName:"p"},"--network")," flag, you can define the network that you would like to inspect, where the\nSS58 address will be based on that network. Now, running the ",(0,s.kt)("inlineCode",{parentName:"p"},"inspect")," command with\n",(0,s.kt)("inlineCode",{parentName:"p"},"--network polkadot")," return your original Polkadot address, thus verifying the public key."),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash"},"$ subkey inspect --network polkadot 5CdiCGvTEuzut954STAXRfL8Lazs3KCZa5LPpkPeqqJXdTHp\n\nPublic Key URI `5CdiCGvTEuzut954STAXRfL8Lazs3KCZa5LPpkPeqqJXdTHp` is account:\n  Network ID/version: polkadot\n  Public key (hex):   0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Account ID:         0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce\n  Public key (SS58):  1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n  SS58 Address:       1a1LcBX6hGPKg5aQ6DXZpAHCCzWjckhea4sz3P1PvL3oc4F\n")),(0,s.kt)("p",null,"You will notice that the Subkey Tool recognizes the correct address network and returns the\nassociated public key. The public key is returned as a hexadecimal string (i.e. prefixed with\n",(0,s.kt)("strong",{parentName:"p"},'"0x"'),"). ",(0,s.kt)("strong",{parentName:"p"},"For both SS58 addresses, the same public key is returned.")),(0,s.kt)("h4",{id:"address-verification"},"Address Verification"),(0,s.kt)("h5",{id:"consider-the-following-example"},"Consider the following example:"),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"19",src:a(37857).Z,width:"739",height:"543"})),(0,s.kt)("p",null,"If you are comfortable enough to distinguish between each account parameter, you can prefix the\npublic-key string with ",(0,s.kt)("strong",{parentName:"p"},'"0x"')," on your own:"),(0,s.kt)("p",null,"From:\n",(0,s.kt)("inlineCode",{parentName:"p"},"Pay DOTs to the Polkadot account:192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce"),',\nwe prefix the address by "0x" ->\n',(0,s.kt)("inlineCode",{parentName:"p"},"0x192c3c7e5789b461fbf1c7f614ba5eed0b22efc507cda60a5e7fda8e046bcdce"),"."),(0,s.kt)("p",null,"Using the ",(0,s.kt)("a",{parentName:"p",href:"https://polkadot.subscan.io/tools/ss58_transform"},"handy subscan tool"),', you can verify\nboth address associations to your public key. Copy your public key into the "Input Account or Public\nKey" textbox and click "Transform" at the bottom. On the right-hand side, the addresses for Polkadot\nand Substrate that are returned based on your public key should match the ones you inspected.'),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"20",src:a(86480).Z,width:"1505",height:"759"})),(0,s.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,s.kt)("div",{parentName:"div",className:"admonition-heading"},(0,s.kt)("h5",{parentName:"div"},(0,s.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,s.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,s.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,s.kt)("div",{parentName:"div",className:"admonition-content"},(0,s.kt)("p",{parentName:"div"},"You may have to scroll down to the bottom of the menu to find the Substrate address based on\nthe menu listings. You will notice that many networks that also use the same Substrate address."))),(0,s.kt)("p",null,"You can verify your public key verification by recalling that Polkadot addresses start with a '1',\nwhereas Substrate addresses generally start with a '5' (Kusama addresses start with a capital\nletter). See ",(0,s.kt)("a",{parentName:"p",href:"/zh-CN/docs/learn-accounts#address-format"},"Addresses")," for more details."),(0,s.kt)("p",null,"Furthermore, the ",(0,s.kt)("a",{parentName:"p",href:"https://github.com/w3f/utility-scripts"},"Utility Scripts")," can be referenced for how\nthe verification is performed:\n",(0,s.kt)("a",{parentName:"p",href:"https://github.com/w3f/utility-scripts/blob/master/src/misc/pubkeyToAddress.js"},"pubkeyToAddress.js"),"\ndemonstrates how a single public key interprets a Polkadot, Substrate, or Kusama address."),(0,s.kt)("h2",{id:"resources"},"Resources"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("a",{parentName:"li",href:"https://www.crowdcast.io/e/polkadot-keys"},"Understanding Accounts and Keys in Polkadot")," - An\nexplanation of what the different kinds of accounts and keys are used for in Polkadot, with Bill\nLaboon and Chinmay Patel of BlockX Labs.")))}h.isMDXComponent=!0},52400:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/decode-1-d470c11b0e3fec74362763573173884c.png"},30325:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/decode-2-793970cefdd889c21865893dc99c8f24.png"},14041:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/index-a2000a16d514f2136b303dd1d29a17f4.png"},49262:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-1-c31b5f6d3c2f160e834f4e2265b38cfe.png"},33336:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-10-ceb74e8213d1346dffe84019346ce560.png"},15943:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-11-d3e7a77b49fda7b62df0c6be8fb25062.png"},65397:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-12-cf8ac6de7dba0ea46f7762d904c8bd8e.png"},32285:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-13-3b0270bd94d9f8f63b77774fd2209d87.png"},73859:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-14-54a9f6b6ac20a8853a8f67db3e8c0f18.png"},84098:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-15-fdc5b5bdbda388657820ededf6a1228e.png"},97087:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-16-04458d25653c35f03e3aa5c0f02a39e1.png"},49618:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-2-332a03806799c4b9a17d3d98798a49a5.png"},20102:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-3-7459599aefb995fdfc558a6304d08dc9.png"},6219:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-4-4d8c9918b6ef46d9ce977e09e2db9bd4.png"},53933:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-5-ae0eb8a58ad8608fb575ad68192a0969.png"},5373:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-6-86b86d58fce83b63bdbd197f810d15ef.png"},27979:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-7-5535bf0edd0e653777bc091b7bf76ca8.png"},17505:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-9-98f0b6673457a98e5d5de6262717711c.png"},20962:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/multisig-addy-a1d7047d605eadc434097b70bb195f8c.png"},37857:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pubkey-1-6dc18c2b04022519cc6dd0fb3af36f94.png"},86480:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/pubkey-2-16f0cbc7db6ab6eb8248a05df94adc35.png"}}]);